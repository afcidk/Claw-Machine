

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Fri Jan 11 17:34:08 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC18F4520 Definitions
    37                           ; 
    38  0000                     fsr0 equ 0FE9h
    39  0000                     fsr0h equ 0FEAh
    40  0000                     fsr0l equ 0FE9h
    41  0000                     fsr1 equ 0FE1h
    42  0000                     fsr1h equ 0FE2h
    43  0000                     fsr1l equ 0FE1h
    44  0000                     fsr2 equ 0FD9h
    45  0000                     fsr2h equ 0FDAh
    46  0000                     fsr2l equ 0FD9h
    47  0000                     indf0 equ 0FEFh
    48  0000                     indf1 equ 0FE7h
    49  0000                     indf2 equ 0FDFh
    50  0000                     intcon equ 0FF2h
    51  0000                     nvmcon equ 00h
    52  0000                     pcl equ 0FF9h
    53  0000                     pclath equ 0FFAh
    54  0000                     pclatu equ 0FFBh
    55  0000                     plusw0 equ 0FEBh
    56  0000                     plusw1 equ 0FE3h
    57  0000                     plusw2 equ 0FDBh
    58  0000                     postdec0 equ 0FEDh
    59  0000                     postdec1 equ 0FE5h
    60  0000                     postdec2 equ 0FDDh
    61  0000                     postinc0 equ 0FEEh
    62  0000                     postinc1 equ 0FE6h
    63  0000                     postinc2 equ 0FDEh
    64  0000                     preinc0 equ 0FECh
    65  0000                     preinc1 equ 0FE4h
    66  0000                     preinc2 equ 0FDCh
    67  0000                     prod equ 0FF3h
    68  0000                     prodh equ 0FF4h
    69  0000                     prodl equ 0FF3h
    70  0000                     status equ 0FD8h
    71  0000                     tablat equ 0FF5h
    72  0000                     tblptr equ 0FF6h
    73  0000                     tblptrh equ 0FF7h
    74  0000                     tblptrl equ 0FF6h
    75  0000                     tblptru equ 0FF8h
    76  0000                     tosl equ 0FFDh
    77  0000                     wreg equ 0FE8h
    78  0000                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc   macro
    64                           	bcf	status,0
    65                           endm
    66  0000                     setc   macro
    67                           	bsf	status,0
    68                           endm
    69  0000                     clrz   macro
    70                           	bcf	status,2
    71                           endm
    72  0000                     setz   macro
    73                           	bsf	status,2
    74                           endm
    75  0000                     skipnz macro
    76                           	btfsc	status,2
    77                           endm
    78  0000                     skipz  macro
    79                           	btfss	status,2
    80                           endm
    81  0000                     skipnc macro
    82                           	btfsc	status,0
    83                           endm
    84  0000                     skipc  macro
    85                           	btfss	status,0
    86                           endm
    87  0000                     pushw macro
    88                           	movwf postinc1
    89                           endm
    90  0000                     pushf macro arg1
    91                           	movff arg1, postinc1
    92                           endm
    93  0000                     popw macro
    94                           	movf postdec1,f
    95                           	movf indf1,w
    96                           endm
    97  0000                     popf macro arg1
    98                           	movf postdec1,f
    99                           	movff indf1,arg1
   100                           endm
   101  0000                     popfc macro arg1
   102                           	movff plusw1,arg1
   103                           	decfsz fsr1,f
   104                           endm
   105  0000                     	global	__ramtop
   106                           	global	__accesstop
   107                           # 54 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   108                           PORTA equ 0F80h ;# 
   109  0000                     # 273 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   110                           PORTB equ 0F81h ;# 
   111  0000                     # 452 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   112                           PORTC equ 0F82h ;# 
   113  0000                     # 634 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   114                           PORTD equ 0F83h ;# 
   115  0000                     # 776 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   116                           PORTE equ 0F84h ;# 
   117  0000                     # 979 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   118                           LATA equ 0F89h ;# 
   119  0000                     # 1091 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   120                           LATB equ 0F8Ah ;# 
   121  0000                     # 1203 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   122                           LATC equ 0F8Bh ;# 
   123  0000                     # 1315 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   124                           LATD equ 0F8Ch ;# 
   125  0000                     # 1427 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   126                           LATE equ 0F8Dh ;# 
   127  0000                     # 1479 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   128                           TRISA equ 0F92h ;# 
   129  0000                     # 1484 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   130                           DDRA equ 0F92h ;# 
   131  0000                     # 1701 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   132                           TRISB equ 0F93h ;# 
   133  0000                     # 1706 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   134                           DDRB equ 0F93h ;# 
   135  0000                     # 1923 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   136                           TRISC equ 0F94h ;# 
   137  0000                     # 1928 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   138                           DDRC equ 0F94h ;# 
   139  0000                     # 2145 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   140                           TRISD equ 0F95h ;# 
   141  0000                     # 2150 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   142                           DDRD equ 0F95h ;# 
   143  0000                     # 2367 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   144                           TRISE equ 0F96h ;# 
   145  0000                     # 2372 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   146                           DDRE equ 0F96h ;# 
   147  0000                     # 2531 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   148                           OSCTUNE equ 0F9Bh ;# 
   149  0000                     # 2596 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   150                           PIE1 equ 0F9Dh ;# 
   151  0000                     # 2673 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   152                           PIR1 equ 0F9Eh ;# 
   153  0000                     # 2750 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   154                           IPR1 equ 0F9Fh ;# 
   155  0000                     # 2827 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   156                           PIE2 equ 0FA0h ;# 
   157  0000                     # 2893 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   158                           PIR2 equ 0FA1h ;# 
   159  0000                     # 2959 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   160                           IPR2 equ 0FA2h ;# 
   161  0000                     # 3025 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   162                           EECON1 equ 0FA6h ;# 
   163  0000                     # 3091 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   164                           EECON2 equ 0FA7h ;# 
   165  0000                     # 3098 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   166                           EEDATA equ 0FA8h ;# 
   167  0000                     # 3105 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   168                           EEADR equ 0FA9h ;# 
   169  0000                     # 3112 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   170                           RCSTA equ 0FABh ;# 
   171  0000                     # 3117 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   172                           RCSTA1 equ 0FABh ;# 
   173  0000                     # 3322 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   174                           TXSTA equ 0FACh ;# 
   175  0000                     # 3327 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   176                           TXSTA1 equ 0FACh ;# 
   177  0000                     # 3578 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   178                           TXREG equ 0FADh ;# 
   179  0000                     # 3583 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   180                           TXREG1 equ 0FADh ;# 
   181  0000                     # 3590 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   182                           RCREG equ 0FAEh ;# 
   183  0000                     # 3595 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   184                           RCREG1 equ 0FAEh ;# 
   185  0000                     # 3602 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   186                           SPBRG equ 0FAFh ;# 
   187  0000                     # 3607 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   188                           SPBRG1 equ 0FAFh ;# 
   189  0000                     # 3614 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   190                           SPBRGH equ 0FB0h ;# 
   191  0000                     # 3621 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   192                           T3CON equ 0FB1h ;# 
   193  0000                     # 3733 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   194                           TMR3 equ 0FB2h ;# 
   195  0000                     # 3740 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   196                           TMR3L equ 0FB2h ;# 
   197  0000                     # 3747 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   198                           TMR3H equ 0FB3h ;# 
   199  0000                     # 3754 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   200                           CMCON equ 0FB4h ;# 
   201  0000                     # 3844 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   202                           CVRCON equ 0FB5h ;# 
   203  0000                     # 3923 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   204                           ECCP1AS equ 0FB6h ;# 
   205  0000                     # 3928 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   206                           ECCPAS equ 0FB6h ;# 
   207  0000                     # 4085 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   208                           PWM1CON equ 0FB7h ;# 
   209  0000                     # 4090 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   210                           ECCP1DEL equ 0FB7h ;# 
   211  0000                     # 4223 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   212                           BAUDCON equ 0FB8h ;# 
   213  0000                     # 4228 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   214                           BAUDCTL equ 0FB8h ;# 
   215  0000                     # 4403 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   216                           CCP2CON equ 0FBAh ;# 
   217  0000                     # 4482 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   218                           CCPR2 equ 0FBBh ;# 
   219  0000                     # 4489 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   220                           CCPR2L equ 0FBBh ;# 
   221  0000                     # 4496 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   222                           CCPR2H equ 0FBCh ;# 
   223  0000                     # 4503 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   224                           CCP1CON equ 0FBDh ;# 
   225  0000                     # 4600 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   226                           CCPR1 equ 0FBEh ;# 
   227  0000                     # 4607 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   228                           CCPR1L equ 0FBEh ;# 
   229  0000                     # 4614 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   230                           CCPR1H equ 0FBFh ;# 
   231  0000                     # 4621 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   232                           ADCON2 equ 0FC0h ;# 
   233  0000                     # 4692 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   234                           ADCON1 equ 0FC1h ;# 
   235  0000                     # 4777 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   236                           ADCON0 equ 0FC2h ;# 
   237  0000                     # 4896 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   238                           ADRES equ 0FC3h ;# 
   239  0000                     # 4903 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   240                           ADRESL equ 0FC3h ;# 
   241  0000                     # 4910 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   242                           ADRESH equ 0FC4h ;# 
   243  0000                     # 4917 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   244                           SSPCON2 equ 0FC5h ;# 
   245  0000                     # 5012 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   246                           SSPCON1 equ 0FC6h ;# 
   247  0000                     # 5082 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   248                           SSPSTAT equ 0FC7h ;# 
   249  0000                     # 5303 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   250                           SSPADD equ 0FC8h ;# 
   251  0000                     # 5310 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   252                           SSPBUF equ 0FC9h ;# 
   253  0000                     # 5317 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   254                           T2CON equ 0FCAh ;# 
   255  0000                     # 5415 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   256                           PR2 equ 0FCBh ;# 
   257  0000                     # 5420 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   258                           MEMCON equ 0FCBh ;# 
   259  0000                     # 5525 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   260                           TMR2 equ 0FCCh ;# 
   261  0000                     # 5532 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   262                           T1CON equ 0FCDh ;# 
   263  0000                     # 5635 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   264                           TMR1 equ 0FCEh ;# 
   265  0000                     # 5642 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   266                           TMR1L equ 0FCEh ;# 
   267  0000                     # 5649 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   268                           TMR1H equ 0FCFh ;# 
   269  0000                     # 5656 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   270                           RCON equ 0FD0h ;# 
   271  0000                     # 5789 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   272                           WDTCON equ 0FD1h ;# 
   273  0000                     # 5817 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   274                           HLVDCON equ 0FD2h ;# 
   275  0000                     # 5822 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   276                           LVDCON equ 0FD2h ;# 
   277  0000                     # 6087 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   278                           OSCCON equ 0FD3h ;# 
   279  0000                     # 6170 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   280                           T0CON equ 0FD5h ;# 
   281  0000                     # 6253 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   282                           TMR0 equ 0FD6h ;# 
   283  0000                     # 6260 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   284                           TMR0L equ 0FD6h ;# 
   285  0000                     # 6267 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   286                           TMR0H equ 0FD7h ;# 
   287  0000                     # 6274 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   288                           STATUS equ 0FD8h ;# 
   289  0000                     # 6345 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   290                           FSR2 equ 0FD9h ;# 
   291  0000                     # 6352 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   292                           FSR2L equ 0FD9h ;# 
   293  0000                     # 6359 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   294                           FSR2H equ 0FDAh ;# 
   295  0000                     # 6366 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   296                           PLUSW2 equ 0FDBh ;# 
   297  0000                     # 6373 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   298                           PREINC2 equ 0FDCh ;# 
   299  0000                     # 6380 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   300                           POSTDEC2 equ 0FDDh ;# 
   301  0000                     # 6387 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   302                           POSTINC2 equ 0FDEh ;# 
   303  0000                     # 6394 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   304                           INDF2 equ 0FDFh ;# 
   305  0000                     # 6401 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   306                           BSR equ 0FE0h ;# 
   307  0000                     # 6408 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   308                           FSR1 equ 0FE1h ;# 
   309  0000                     # 6415 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   310                           FSR1L equ 0FE1h ;# 
   311  0000                     # 6422 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   312                           FSR1H equ 0FE2h ;# 
   313  0000                     # 6429 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   314                           PLUSW1 equ 0FE3h ;# 
   315  0000                     # 6436 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   316                           PREINC1 equ 0FE4h ;# 
   317  0000                     # 6443 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   318                           POSTDEC1 equ 0FE5h ;# 
   319  0000                     # 6450 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   320                           POSTINC1 equ 0FE6h ;# 
   321  0000                     # 6457 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   322                           INDF1 equ 0FE7h ;# 
   323  0000                     # 6464 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   324                           WREG equ 0FE8h ;# 
   325  0000                     # 6476 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   326                           FSR0 equ 0FE9h ;# 
   327  0000                     # 6483 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   328                           FSR0L equ 0FE9h ;# 
   329  0000                     # 6490 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   330                           FSR0H equ 0FEAh ;# 
   331  0000                     # 6497 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   332                           PLUSW0 equ 0FEBh ;# 
   333  0000                     # 6504 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   334                           PREINC0 equ 0FECh ;# 
   335  0000                     # 6511 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   336                           POSTDEC0 equ 0FEDh ;# 
   337  0000                     # 6518 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   338                           POSTINC0 equ 0FEEh ;# 
   339  0000                     # 6525 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   340                           INDF0 equ 0FEFh ;# 
   341  0000                     # 6532 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   342                           INTCON3 equ 0FF0h ;# 
   343  0000                     # 6624 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   344                           INTCON2 equ 0FF1h ;# 
   345  0000                     # 6694 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   346                           INTCON equ 0FF2h ;# 
   347  0000                     # 6811 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   348                           PROD equ 0FF3h ;# 
   349  0000                     # 6818 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   350                           PRODL equ 0FF3h ;# 
   351  0000                     # 6825 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   352                           PRODH equ 0FF4h ;# 
   353  0000                     # 6832 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   354                           TABLAT equ 0FF5h ;# 
   355  0000                     # 6841 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   356                           TBLPTR equ 0FF6h ;# 
   357  0000                     # 6848 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   358                           TBLPTRL equ 0FF6h ;# 
   359  0000                     # 6855 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   360                           TBLPTRH equ 0FF7h ;# 
   361  0000                     # 6862 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   362                           TBLPTRU equ 0FF8h ;# 
   363  0000                     # 6871 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   364                           PCLAT equ 0FF9h ;# 
   365  0000                     # 6878 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   366                           PC equ 0FF9h ;# 
   367  0000                     # 6885 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   368                           PCL equ 0FF9h ;# 
   369  0000                     # 6892 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   370                           PCLATH equ 0FFAh ;# 
   371  0000                     # 6899 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   372                           PCLATU equ 0FFBh ;# 
   373  0000                     # 6906 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   374                           STKPTR equ 0FFCh ;# 
   375  0000                     # 6980 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   376                           TOS equ 0FFDh ;# 
   377  0000                     # 6987 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   378                           TOSL equ 0FFDh ;# 
   379  0000                     # 6994 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   380                           TOSH equ 0FFEh ;# 
   381  0000                     # 7001 "/opt/microchip/xc8/v2.00/pic/include/pic18f4520.h"
   382                           TOSU equ 0FFFh ;# 
   383  0000                     	FNCALL	_main,_LEDConfig
   384                           	FNCALL	_main,_TMR0Config
   385                           	FNROOT	_main
   386                           	FNCALL	_timer_zero,___awdiv
   387                           	FNCALL	_timer_zero,___awmod
   388                           	FNCALL	intlevel2,_timer_zero
   389                           	global	intlevel2
   390                           	FNROOT	intlevel2
   391                           	global	_CURRENT
   392                           	global	_TMR0
   393                           _TMR0	set	0xFD6
   394  0000                     	global	_LATD
   395                           _LATD	set	0xF8C
   396  0000                     	global	_LATC
   397                           _LATC	set	0xF8B
   398  0000                     	global	_LATB
   399                           _LATB	set	0xF8A
   400  0000                     	global	_LATA
   401                           _LATA	set	0xF89
   402  0000                     	global	_TRISD
   403                           _TRISD	set	0xF95
   404  0000                     	global	_TRISC
   405                           _TRISC	set	0xF94
   406  0000                     	global	_TRISB
   407                           _TRISB	set	0xF93
   408  0000                     	global	_TRISA
   409                           _TRISA	set	0xF92
   410  0000                     	global	_INTCONbits
   411                           _INTCONbits	set	0xFF2
   412  0000                     	global	_T0CONbits
   413                           _T0CONbits	set	0xFD5
   414  0000                     ; #config settings
   415                           global __CFG_OSC$INTIO67
   416                           __CFG_OSC$INTIO67 equ 0x0
   417  0000                     global __CFG_FCMEN$OFF
   418                           __CFG_FCMEN$OFF equ 0x0
   419  0000                     global __CFG_IESO$ON
   420                           __CFG_IESO$ON equ 0x0
   421  0000                     global __CFG_PWRT$OFF
   422                           __CFG_PWRT$OFF equ 0x0
   423  0000                     global __CFG_BOREN$SBORDIS
   424                           __CFG_BOREN$SBORDIS equ 0x0
   425  0000                     global __CFG_BORV$3
   426                           __CFG_BORV$3 equ 0x0
   427  0000                     global __CFG_WDT$OFF
   428                           __CFG_WDT$OFF equ 0x0
   429  0000                     global __CFG_WDTPS$1
   430                           __CFG_WDTPS$1 equ 0x0
   431  0000                     global __CFG_CCP2MX$PORTC
   432                           __CFG_CCP2MX$PORTC equ 0x0
   433  0000                     global __CFG_PBADEN$ON
   434                           __CFG_PBADEN$ON equ 0x0
   435  0000                     global __CFG_LPT1OSC$OFF
   436                           __CFG_LPT1OSC$OFF equ 0x0
   437  0000                     global __CFG_MCLRE$ON
   438                           __CFG_MCLRE$ON equ 0x0
   439  0000                     global __CFG_STVREN$ON
   440                           __CFG_STVREN$ON equ 0x0
   441  0000                     global __CFG_LVP$OFF
   442                           __CFG_LVP$OFF equ 0x0
   443  0000                     global __CFG_XINST$OFF
   444                           __CFG_XINST$OFF equ 0x0
   445  0000                     global __CFG_CP0$OFF
   446                           __CFG_CP0$OFF equ 0x0
   447  0000                     global __CFG_CP1$OFF
   448                           __CFG_CP1$OFF equ 0x0
   449  0000                     global __CFG_CP2$OFF
   450                           __CFG_CP2$OFF equ 0x0
   451  0000                     global __CFG_CP3$OFF
   452                           __CFG_CP3$OFF equ 0x0
   453  0000                     global __CFG_CPB$OFF
   454                           __CFG_CPB$OFF equ 0x0
   455  0000                     global __CFG_CPD$OFF
   456                           __CFG_CPD$OFF equ 0x0
   457  0000                     global __CFG_WRT0$OFF
   458                           __CFG_WRT0$OFF equ 0x0
   459  0000                     global __CFG_WRT1$OFF
   460                           __CFG_WRT1$OFF equ 0x0
   461  0000                     global __CFG_WRT2$OFF
   462                           __CFG_WRT2$OFF equ 0x0
   463  0000                     global __CFG_WRT3$OFF
   464                           __CFG_WRT3$OFF equ 0x0
   465  0000                     global __CFG_WRTC$OFF
   466                           __CFG_WRTC$OFF equ 0x0
   467  0000                     global __CFG_WRTB$OFF
   468                           __CFG_WRTB$OFF equ 0x0
   469  0000                     global __CFG_WRTD$OFF
   470                           __CFG_WRTD$OFF equ 0x0
   471  0000                     global __CFG_EBTR0$OFF
   472                           __CFG_EBTR0$OFF equ 0x0
   473  0000                     global __CFG_EBTR1$OFF
   474                           __CFG_EBTR1$OFF equ 0x0
   475  0000                     global __CFG_EBTR2$OFF
   476                           __CFG_EBTR2$OFF equ 0x0
   477  0000                     global __CFG_EBTR3$OFF
   478                           __CFG_EBTR3$OFF equ 0x0
   479  0000                     global __CFG_EBTRB$OFF
   480                           __CFG_EBTRB$OFF equ 0x0
   481  0000                     	file	"/tmp/xcX3jIkF2"
   482                           	line	#
   483                           psect	cinit,class=CODE,delta=1,reloc=2
   484                           global __pcinit
   485                           __pcinit:
   486  000382                     global start_initialization
   487                           start_initialization:
   488  000382                     
   489                           global __initialization
   490                           __initialization:
   491  000382                     psect	bssCOMRAM,class=COMRAM,space=1,noexec
   492                           global __pbssCOMRAM
   493                           __pbssCOMRAM:
   494  000010                     	global	_CURRENT
   495                           _CURRENT:
   496  000010                            ds      2
   497  000010                     	file	"/tmp/xcX3jIkF2"
   498                           	line	#
   499                           psect	cinit
   500                           ; Clear objects allocated to COMRAM (2 bytes)
   501                           	global __pbssCOMRAM
   502                           clrf	(__pbssCOMRAM+1)&0xffh,c
   503  000382  6A11               clrf	(__pbssCOMRAM+0)&0xffh,c
   504  000384  6A10               psect cinit,class=CODE,delta=1
   505                           global end_of_initialization,__end_of__initialization
   506                           
   507                           ;End of C runtime variable initialization code
   508                           
   509                           end_of_initialization:
   510  000386                     __end_of__initialization:
   511  000386                     	bcf int$flags,0,c ;clear compiler interrupt flag (level 1)
   512  000386  9012               	bcf int$flags,1,c ;clear compiler interrupt flag (level 2)
   513  000388  9212               	GLOBAL	__Lmediumconst
   514                           	movlw	low highword(__Lmediumconst)
   515  00038A  0E00               	movwf	tblptru
   516  00038C  6EF8               movlb 0
   517  00038E  0100               goto _main	;jump to C main() function
   518  000390  EFCA  F001         psect	cstackCOMRAM,class=COMRAM,space=1,noexec
   519                           global __pcstackCOMRAM
   520                           __pcstackCOMRAM:
   521  000001                     ?_TMR0Config:	; 1 bytes @ 0x0
   522  000001                     ?_LEDConfig:	; 1 bytes @ 0x0
   523  000001                     ?_timer_zero:	; 1 bytes @ 0x0
   524  000001                     	global	?___awdiv
   525                           ?___awdiv:	; 2 bytes @ 0x0
   526  000001                     	global	?___awmod
   527                           ?___awmod:	; 2 bytes @ 0x0
   528  000001                     	global	___awdiv@dividend
   529                           ___awdiv@dividend:	; 2 bytes @ 0x0
   530  000001                     	global	___awmod@dividend
   531                           ___awmod@dividend:	; 2 bytes @ 0x0
   532  000001                     	ds   2
   533  000001                     	global	___awdiv@divisor
   534                           ___awdiv@divisor:	; 2 bytes @ 0x2
   535  000003                     	global	___awmod@divisor
   536                           ___awmod@divisor:	; 2 bytes @ 0x2
   537  000003                     	ds   2
   538  000003                     ??___awdiv:	; 1 bytes @ 0x4
   539  000005                     ??___awmod:	; 1 bytes @ 0x4
   540  000005                     	global	___awdiv@counter
   541                           ___awdiv@counter:	; 1 bytes @ 0x4
   542  000005                     	global	___awmod@counter
   543                           ___awmod@counter:	; 1 bytes @ 0x4
   544  000005                     	ds   1
   545  000005                     	global	___awdiv@sign
   546                           ___awdiv@sign:	; 1 bytes @ 0x5
   547  000006                     	global	___awmod@sign
   548                           ___awmod@sign:	; 1 bytes @ 0x5
   549  000006                     	ds   1
   550  000006                     	global	___awdiv@quotient
   551                           ___awdiv@quotient:	; 2 bytes @ 0x6
   552  000007                     	ds   2
   553  000007                     ??_timer_zero:	; 1 bytes @ 0x8
   554  000009                     	ds   2
   555  000009                     ??_TMR0Config:	; 1 bytes @ 0xA
   556  00000B                     ??_LEDConfig:	; 1 bytes @ 0xA
   557  00000B                     ?_main:	; 2 bytes @ 0xA
   558  00000B                     main@argc:	; 2 bytes @ 0xA
   559  00000B                     	ds   2
   560  00000B                     main@argv:	; 3 bytes @ 0xC
   561  00000D                     	ds   3
   562  00000D                     ??_main:	; 1 bytes @ 0xF
   563  000010                     ;!
   564                           ;!Data Sizes:
   565                           ;!    Strings     0
   566                           ;!    Constant    0
   567                           ;!    Data        0
   568                           ;!    BSS         2
   569                           ;!    Persistent  0
   570                           ;!    Stack       0
   571                           ;!
   572                           ;!Auto Spaces:
   573                           ;!    Space          Size  Autos    Used
   574                           ;!    COMRAM          126     15      17
   575                           ;!    BANK0           128      0       0
   576                           ;!    BANK1           256      0       0
   577                           ;!    BANK2           256      0       0
   578                           ;!    BANK3           256      0       0
   579                           ;!    BANK4           256      0       0
   580                           ;!    BANK5           256      0       0
   581                           
   582                           ;!
   583                           ;!Pointer List with Targets:
   584                           ;!
   585                           ;!    None.
   586                           
   587                           
   588                           ;!
   589                           ;!Critical Paths under _main in COMRAM
   590                           ;!
   591                           ;!    None.
   592                           ;!
   593                           ;!Critical Paths under _timer_zero in COMRAM
   594                           ;!
   595                           ;!    _timer_zero->___awdiv
   596                           ;!
   597                           ;!Critical Paths under _main in BANK0
   598                           ;!
   599                           ;!    None.
   600                           ;!
   601                           ;!Critical Paths under _timer_zero in BANK0
   602                           ;!
   603                           ;!    None.
   604                           ;!
   605                           ;!Critical Paths under _main in BANK1
   606                           ;!
   607                           ;!    None.
   608                           ;!
   609                           ;!Critical Paths under _timer_zero in BANK1
   610                           ;!
   611                           ;!    None.
   612                           ;!
   613                           ;!Critical Paths under _main in BANK2
   614                           ;!
   615                           ;!    None.
   616                           ;!
   617                           ;!Critical Paths under _timer_zero in BANK2
   618                           ;!
   619                           ;!    None.
   620                           ;!
   621                           ;!Critical Paths under _main in BANK3
   622                           ;!
   623                           ;!    None.
   624                           ;!
   625                           ;!Critical Paths under _timer_zero in BANK3
   626                           ;!
   627                           ;!    None.
   628                           ;!
   629                           ;!Critical Paths under _main in BANK4
   630                           ;!
   631                           ;!    None.
   632                           ;!
   633                           ;!Critical Paths under _timer_zero in BANK4
   634                           ;!
   635                           ;!    None.
   636                           ;!
   637                           ;!Critical Paths under _main in BANK5
   638                           ;!
   639                           ;!    None.
   640                           ;!
   641                           ;!Critical Paths under _timer_zero in BANK5
   642                           ;!
   643                           ;!    None.
   644                           
   645 ;;
   646 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   647 ;;
   648                           
   649                           ;!
   650                           ;!Call Graph Tables:
   651                           ;!
   652                           ;! ---------------------------------------------------------------------------------
   653                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   654                           ;! ---------------------------------------------------------------------------------
   655                           ;! (0) _main                                                 5     0      5       0
   656                           ;!                                             10 COMRAM     5     0      5
   657                           ;!                          _LEDConfig
   658                           ;!                         _TMR0Config
   659                           ;! ---------------------------------------------------------------------------------
   660                           ;! (1) _TMR0Config                                           0     0      0       0
   661                           ;! ---------------------------------------------------------------------------------
   662                           ;! (1) _LEDConfig                                            0     0      0       0
   663                           ;! ---------------------------------------------------------------------------------
   664                           ;! Estimated maximum stack depth 1
   665                           ;! ---------------------------------------------------------------------------------
   666                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   667                           ;! ---------------------------------------------------------------------------------
   668                           ;! (2) _timer_zero                                           2     2      0     900
   669                           ;!                                              8 COMRAM     2     2      0
   670                           ;!                            ___awdiv
   671                           ;!                            ___awmod
   672                           ;! ---------------------------------------------------------------------------------
   673                           ;! (3) ___awmod                                              6     2      4     448
   674                           ;!                                              0 COMRAM     6     2      4
   675                           ;! ---------------------------------------------------------------------------------
   676                           ;! (3) ___awdiv                                              8     4      4     452
   677                           ;!                                              0 COMRAM     8     4      4
   678                           ;! ---------------------------------------------------------------------------------
   679                           ;! Estimated maximum stack depth 3
   680                           ;! ---------------------------------------------------------------------------------
   681                           ;!
   682                           ;! Call Graph Graphs:
   683                           ;!
   684                           ;! _main (ROOT)
   685                           ;!   _LEDConfig
   686                           ;!   _TMR0Config
   687                           ;!
   688                           ;! _timer_zero (ROOT)
   689                           ;!   ___awdiv
   690                           ;!   ___awmod
   691                           ;!
   692                           
   693                           ;! Address spaces:
   694                           
   695                           ;!Name               Size   Autos  Total    Cost      Usage
   696                           ;!BIGRAM             5FF      0       0      17        0.0%
   697                           ;!EEDATA             100      0       0       0        0.0%
   698                           ;!BITBANK5           100      0       0      16        0.0%
   699                           ;!BANK5              100      0       0      14        0.0%
   700                           ;!BITBANK4           100      0       0      12        0.0%
   701                           ;!BANK4              100      0       0      13        0.0%
   702                           ;!BITBANK3           100      0       0      10        0.0%
   703                           ;!BANK3              100      0       0      11        0.0%
   704                           ;!BITBANK2           100      0       0       8        0.0%
   705                           ;!BANK2              100      0       0       9        0.0%
   706                           ;!BITBANK1           100      0       0       6        0.0%
   707                           ;!BANK1              100      0       0       7        0.0%
   708                           ;!BITBANK0            80      0       0       4        0.0%
   709                           ;!BANK0               80      0       0       5        0.0%
   710                           ;!BITCOMRAM           7E      0       0       0        0.0%
   711                           ;!COMRAM              7E      F      11       1       13.5%
   712                           ;!BITSFR               0      0       0     200        0.0%
   713                           ;!SFR                  0      0       0     200        0.0%
   714                           ;!STACK                0      0       0       2        0.0%
   715                           ;!NULL                 0      0       0       0        0.0%
   716                           ;!ABS                  0      0      11      15        0.0%
   717                           ;!DATA                 0      0      11       3        0.0%
   718                           ;!CODE                 0      0       0       0        0.0%
   719                           
   720                           	global	_main
   721                           
   722 ;; *************** function _main *****************
   723 ;; Defined at:
   724 ;;		line 127 in file "main.c"
   725 ;; Parameters:    Size  Location     Type
   726 ;;  argc            2   10[COMRAM] int 
   727 ;;  argv            3   12[COMRAM] PTR PTR unsigned char 
   728 ;; Auto vars:     Size  Location     Type
   729 ;;		None
   730 ;; Return value:  Size  Location     Type
   731 ;;                  2   10[COMRAM] int 
   732 ;; Registers used:
   733 ;;		wreg, status,2, cstack
   734 ;; Tracked objects:
   735 ;;		On entry : 0/0
   736 ;;		On exit  : 0/0
   737 ;;		Unchanged: 0/0
   738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   739 ;;      Params:         5       0       0       0       0       0       0
   740 ;;      Locals:         0       0       0       0       0       0       0
   741 ;;      Temps:          0       0       0       0       0       0       0
   742 ;;      Totals:         5       0       0       0       0       0       0
   743 ;;Total ram usage:        5 bytes
   744 ;; Hardware stack levels required when called:    3
   745 ;; This function calls:
   746 ;;		_LEDConfig
   747 ;;		_TMR0Config
   748 ;; This function is called by:
   749 ;;		Startup code after reset
   750 ;; This function uses a non-reentrant model
   751 ;;
   752                           psect	text0,class=CODE,space=0,reloc=2,group=0
   753                           	file	"main.c"
   754                           	line	127
   755                           global __ptext0
   756                           __ptext0:
   757  000394                     psect	text0
   758                           	file	"main.c"
   759                           	line	127
   760                           	global	__size_of_main
   761                           	__size_of_main	equ	__end_of_main-_main
   762  0000                     	
   763                           _main:
   764  000394                     ;incstack = 0
   765                           	opt	stack 28
   766                           	line	128
   767                           	
   768                           l970:
   769  000394                     	call	_TMR0Config	;wreg free
   770  000394  EC9F  F001         	line	129
   771                           	call	_LEDConfig	;wreg free
   772  000398  ECB0  F001         	line	130
   773                           	
   774                           l47:
   775  00039C                     	
   776                           l48:
   777  00039C                     	goto	l47
   778  00039C  EFCE  F001         	
   779                           l49:
   780  0003A0                     	line	132
   781                           ;	Return value of _main is never used
   782                           	
   783                           l50:
   784  0003A0                     	global	start
   785                           	goto	start
   786  0003A0  EF07  F000         	opt stack 0
   787                           GLOBAL	__end_of_main
   788                           	__end_of_main:
   789  0003A4                     	signat	_main,8314
   790                           	global	_TMR0Config
   791                           
   792 ;; *************** function _TMR0Config *****************
   793 ;; Defined at:
   794 ;;		line 74 in file "main.c"
   795 ;; Parameters:    Size  Location     Type
   796 ;;		None
   797 ;; Auto vars:     Size  Location     Type
   798 ;;		None
   799 ;; Return value:  Size  Location     Type
   800 ;;                  1    wreg      void 
   801 ;; Registers used:
   802 ;;		wreg, status,2
   803 ;; Tracked objects:
   804 ;;		On entry : 0/0
   805 ;;		On exit  : 0/0
   806 ;;		Unchanged: 0/0
   807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   808 ;;      Params:         0       0       0       0       0       0       0
   809 ;;      Locals:         0       0       0       0       0       0       0
   810 ;;      Temps:          0       0       0       0       0       0       0
   811 ;;      Totals:         0       0       0       0       0       0       0
   812 ;;Total ram usage:        0 bytes
   813 ;; Hardware stack levels used:    1
   814 ;; Hardware stack levels required when called:    2
   815 ;; This function calls:
   816 ;;		Nothing
   817 ;; This function is called by:
   818 ;;		_main
   819 ;; This function uses a non-reentrant model
   820 ;;
   821                           psect	text1,class=CODE,space=0,reloc=2,group=0
   822                           	line	74
   823                           global __ptext1
   824                           __ptext1:
   825  00033E                     psect	text1
   826                           	file	"main.c"
   827                           	line	74
   828                           	global	__size_of_TMR0Config
   829                           	__size_of_TMR0Config	equ	__end_of_TMR0Config-_TMR0Config
   830  0000                     	
   831                           _TMR0Config:
   832  00033E                     ;incstack = 0
   833                           	opt	stack 28
   834                           	line	75
   835                           	
   836                           l726:
   837  00033E                     	bsf	((c:4053)),c,7	;volatile
   838  00033E  8ED5               	line	76
   839                           	bcf	((c:4053)),c,5	;volatile
   840  000340  9AD5               	line	77
   841                           	bcf	((c:4053)),c,6	;volatile
   842  000342  9CD5               	line	79
   843                           	bcf	((c:4053)),c,3	;volatile
   844  000344  96D5               	line	80
   845                           	
   846                           l728:
   847  000346                     	movf	((c:4053)),c,w	;volatile
   848  000346  50D5               	andlw	not (((1<<3)-1)<<0)
   849  000348  0BF8               	iorlw	(01h & ((1<<3)-1))<<0
   850  00034A  0901               	movwf	((c:4053)),c	;volatile
   851  00034C  6ED5               	line	82
   852                           	
   853                           l730:
   854  00034E                     	bcf	((c:4082)),c,2	;volatile
   855  00034E  94F2               	line	83
   856                           	
   857                           l732:
   858  000350                     	bsf	((c:4082)),c,5	;volatile
   859  000350  8AF2               	line	86
   860                           	
   861                           l734:
   862  000352                     	bsf	((c:4082)),c,6	;volatile
   863  000352  8CF2               	line	87
   864                           	
   865                           l736:
   866  000354                     	bsf	((c:4082)),c,7	;volatile
   867  000354  8EF2               	line	89
   868                           	movlw	high(0)
   869  000356  0E00               	movwf	((c:4054+1)),c	;volatile
   870  000358  6ED7               	movlw	low(0)
   871  00035A  0E00               	movwf	((c:4054)),c	;volatile
   872  00035C  6ED6               	line	90
   873                           	
   874                           l27:
   875  00035E                     	return	;funcret
   876  00035E  0012               	opt stack 0
   877                           GLOBAL	__end_of_TMR0Config
   878                           	__end_of_TMR0Config:
   879  000360                     	signat	_TMR0Config,89
   880                           	global	_LEDConfig
   881                           
   882 ;; *************** function _LEDConfig *****************
   883 ;; Defined at:
   884 ;;		line 93 in file "main.c"
   885 ;; Parameters:    Size  Location     Type
   886 ;;		None
   887 ;; Auto vars:     Size  Location     Type
   888 ;;		None
   889 ;; Return value:  Size  Location     Type
   890 ;;                  1    wreg      void 
   891 ;; Registers used:
   892 ;;		wreg, status,2
   893 ;; Tracked objects:
   894 ;;		On entry : 0/0
   895 ;;		On exit  : 0/0
   896 ;;		Unchanged: 0/0
   897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   898 ;;      Params:         0       0       0       0       0       0       0
   899 ;;      Locals:         0       0       0       0       0       0       0
   900 ;;      Temps:          0       0       0       0       0       0       0
   901 ;;      Totals:         0       0       0       0       0       0       0
   902 ;;Total ram usage:        0 bytes
   903 ;; Hardware stack levels used:    1
   904 ;; Hardware stack levels required when called:    2
   905 ;; This function calls:
   906 ;;		Nothing
   907 ;; This function is called by:
   908 ;;		_main
   909 ;; This function uses a non-reentrant model
   910 ;;
   911                           psect	text2,class=CODE,space=0,reloc=2,group=0
   912                           	line	93
   913                           global __ptext2
   914                           __ptext2:
   915  000360                     psect	text2
   916                           	file	"main.c"
   917                           	line	93
   918                           	global	__size_of_LEDConfig
   919                           	__size_of_LEDConfig	equ	__end_of_LEDConfig-_LEDConfig
   920  0000                     	
   921                           _LEDConfig:
   922  000360                     ;incstack = 0
   923                           	opt	stack 28
   924                           	line	94
   925                           	
   926                           l738:
   927  000360                     	movlw	low(0)
   928  000360  0E00               	movwf	((c:3989)),c	;volatile
   929  000362  6E95               	movff	(c:3989),(c:3988)	;volatile
   930  000364  CF95 FF94          	movff	(c:3988),(c:3987)	;volatile
   931  000368  CF94 FF93          	movff	(c:3987),(c:3986)	;volatile
   932  00036C  CF93 FF92          	line	95
   933                           	movlw	low(0)
   934  000370  0E00               	movwf	((c:3980)),c	;volatile
   935  000372  6E8C               	movff	(c:3980),(c:3979)	;volatile
   936  000374  CF8C FF8B          	movff	(c:3979),(c:3978)	;volatile
   937  000378  CF8B FF8A          	movff	(c:3978),(c:3977)	;volatile
   938  00037C  CF8A FF89          	line	96
   939                           	
   940                           l30:
   941  000380                     	return	;funcret
   942  000380  0012               	opt stack 0
   943                           GLOBAL	__end_of_LEDConfig
   944                           	__end_of_LEDConfig:
   945  000382                     	signat	_LEDConfig,89
   946                           	global	_timer_zero
   947                           
   948 ;; *************** function _timer_zero *****************
   949 ;; Defined at:
   950 ;;		line 98 in file "main.c"
   951 ;; Parameters:    Size  Location     Type
   952 ;;		None
   953 ;; Auto vars:     Size  Location     Type
   954 ;;		None
   955 ;; Return value:  Size  Location     Type
   956 ;;                  1    wreg      void 
   957 ;; Registers used:
   958 ;;		wreg, status,2, status,0, cstack
   959 ;; Tracked objects:
   960 ;;		On entry : 0/0
   961 ;;		On exit  : 0/0
   962 ;;		Unchanged: 0/0
   963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   964 ;;      Params:         0       0       0       0       0       0       0
   965 ;;      Locals:         0       0       0       0       0       0       0
   966 ;;      Temps:          2       0       0       0       0       0       0
   967 ;;      Totals:         2       0       0       0       0       0       0
   968 ;;Total ram usage:        2 bytes
   969 ;; Hardware stack levels used:    1
   970 ;; Hardware stack levels required when called:    1
   971 ;; This function calls:
   972 ;;		___awdiv
   973 ;;		___awmod
   974 ;; This function is called by:
   975 ;;		Interrupt level 2
   976 ;; This function uses a non-reentrant model
   977 ;;
   978                           psect	intcode,class=CODE,space=0,reloc=2
   979                           global __pintcode
   980                           __pintcode:
   981  000008                     psect	intcode
   982                           	file	"main.c"
   983                           	line	98
   984                           	global	__size_of_timer_zero
   985                           	__size_of_timer_zero	equ	__end_of_timer_zero-_timer_zero
   986  0000                     	
   987                           _timer_zero:
   988  000008                     ;incstack = 0
   989                           	opt	stack 28
   990                           	bsf int$flags,1,c ;set compiler interrupt flag (level 2)
   991  000008  8212               	global	int_func
   992                           	call	int_func,f	;refresh shadow registers
   993  00000A  ED09  F000         psect	intcode_body,class=CODE,space=0,reloc=2
   994                           global __pintcode_body
   995                           __pintcode_body:
   996  000012                     int_func:
   997  000012                     
   998                           	pop	; remove dummy address from shadow register refresh
   999  000012  0006               	line	99
  1000                           	
  1001                           i2l938:
  1002  000014                     	btfss	((c:4082)),c,5	;volatile
  1003  000014  AAF2               	goto	i2u31_41
  1004  000016  EF0F  F000         	goto	i2u31_40
  1005  00001A  EF11  F000         i2u31_41:
  1006  00001E                     	goto	i2l42
  1007  00001E  EFBB  F000         i2u31_40:
  1008  000022                     	
  1009                           i2l940:
  1010  000022                     	btfss	((c:4082)),c,2	;volatile
  1011  000022  A4F2               	goto	i2u32_41
  1012  000024  EF16  F000         	goto	i2u32_40
  1013  000028  EF18  F000         i2u32_41:
  1014  00002C                     	goto	i2l42
  1015  00002C  EFBB  F000         i2u32_40:
  1016  000030                     	line	100
  1017                           	
  1018                           i2l942:
  1019  000030                     	bcf	((c:4082)),c,2	;volatile
  1020  000030  94F2               	line	101
  1021                           	
  1022                           i2l944:
  1023  000032                     	movlw	low(01h)
  1024  000032  0E01               	addwf	((c:_CURRENT)),c,w
  1025  000034  2410               	movwf	((c:___awmod@dividend)),c
  1026  000036  6E01               	movlw	high(01h)
  1027  000038  0E00               	addwfc	((c:_CURRENT+1)),c,w
  1028  00003A  2011               	movwf	1+((c:___awmod@dividend)),c
  1029  00003C  6E02               	movlw	high(01Eh)
  1030  00003E  0E00               	movwf	((c:___awmod@divisor+1)),c
  1031  000040  6E04               	movlw	low(01Eh)
  1032  000042  0E1E               	movwf	((c:___awmod@divisor)),c
  1033  000044  6E03               	call	___awmod	;wreg free
  1034  000046  EC33  F001         	movff	0+?___awmod,(c:_CURRENT)
  1035  00004A  C001  F010         	movff	1+?___awmod,(c:_CURRENT+1)
  1036  00004E  C002  F011         	line	102
  1037                           	goto	i2l964
  1038  000052  EF95  F000         	line	103
  1039                           	
  1040                           i2l37:
  1041  000056                     	line	104
  1042                           	
  1043                           i2l946:
  1044  000056                     	movlw	low(01h)
  1045  000056  0E01               	movwf	((c:3977)),c	;volatile
  1046  000058  6E89               	line	105
  1047                           	movlw	low(0)
  1048  00005A  0E00               	movwf	((c:3980)),c	;volatile
  1049  00005C  6E8C               	movff	(c:3980),(c:3979)	;volatile
  1050  00005E  CF8C FF8B          	movff	(c:3979),(c:3978)	;volatile
  1051  000062  CF8B FF8A          	line	106
  1052                           	
  1053                           i2l948:
  1054  000066                     	movff	(c:_CURRENT),??_timer_zero+0+0
  1055  000066  C010  F009         	movlw	07h
  1056  00006A  0E07               	andwf	(??_timer_zero+0+0),c
  1057  00006C  1609               	movff	(c:3977),??_timer_zero+1+0	;volatile
  1058  00006E  CF89 F00A          	incf	(??_timer_zero+0+0),c
  1059  000072  2A09               	goto	i2u33_44
  1060  000074  EF3E  F000         i2u33_45:
  1061  000078                     	bcf	status,0
  1062  000078  90D8               	rlcf	(??_timer_zero+1+0),c
  1063  00007A  360A               i2u33_44:
  1064  00007C                     	decfsz	(??_timer_zero+0+0),c
  1065  00007C  2E09               	goto	i2u33_45
  1066  00007E  EF3C  F000         	movf	(??_timer_zero+1+0),c,w
  1067  000082  500A               	movwf	((c:3977)),c	;volatile
  1068  000084  6E89               	line	107
  1069                           	goto	i2l42
  1070  000086  EFBB  F000         	line	108
  1071                           	
  1072                           i2l39:
  1073  00008A                     	line	109
  1074                           	
  1075                           i2l950:
  1076  00008A                     	movlw	low(01h)
  1077  00008A  0E01               	movwf	((c:3978)),c	;volatile
  1078  00008C  6E8A               	line	110
  1079                           	movlw	low(0)
  1080  00008E  0E00               	movwf	((c:3980)),c	;volatile
  1081  000090  6E8C               	movff	(c:3980),(c:3979)	;volatile
  1082  000092  CF8C FF8B          	movff	(c:3979),(c:3977)	;volatile
  1083  000096  CF8B FF89          	line	111
  1084                           	
  1085                           i2l952:
  1086  00009A                     	movff	(c:_CURRENT),??_timer_zero+0+0
  1087  00009A  C010  F009         	movlw	07h
  1088  00009E  0E07               	andwf	(??_timer_zero+0+0),c
  1089  0000A0  1609               	movff	(c:3978),??_timer_zero+1+0	;volatile
  1090  0000A2  CF8A F00A          	incf	(??_timer_zero+0+0),c
  1091  0000A6  2A09               	goto	i2u34_44
  1092  0000A8  EF58  F000         i2u34_45:
  1093  0000AC                     	bcf	status,0
  1094  0000AC  90D8               	rlcf	(??_timer_zero+1+0),c
  1095  0000AE  360A               i2u34_44:
  1096  0000B0                     	decfsz	(??_timer_zero+0+0),c
  1097  0000B0  2E09               	goto	i2u34_45
  1098  0000B2  EF56  F000         	movf	(??_timer_zero+1+0),c,w
  1099  0000B6  500A               	movwf	((c:3978)),c	;volatile
  1100  0000B8  6E8A               	line	112
  1101                           	goto	i2l42
  1102  0000BA  EFBB  F000         	line	113
  1103                           	
  1104                           i2l40:
  1105  0000BE                     	line	114
  1106                           	
  1107                           i2l954:
  1108  0000BE                     	movlw	low(01h)
  1109  0000BE  0E01               	movwf	((c:3979)),c	;volatile
  1110  0000C0  6E8B               	line	115
  1111                           	movlw	low(0)
  1112  0000C2  0E00               	movwf	((c:3980)),c	;volatile
  1113  0000C4  6E8C               	movff	(c:3980),(c:3978)	;volatile
  1114  0000C6  CF8C FF8A          	movff	(c:3978),(c:3977)	;volatile
  1115  0000CA  CF8A FF89          	line	116
  1116                           	
  1117                           i2l956:
  1118  0000CE                     	movff	(c:_CURRENT),??_timer_zero+0+0
  1119  0000CE  C010  F009         	movlw	07h
  1120  0000D2  0E07               	andwf	(??_timer_zero+0+0),c
  1121  0000D4  1609               	movff	(c:3979),??_timer_zero+1+0	;volatile
  1122  0000D6  CF8B F00A          	incf	(??_timer_zero+0+0),c
  1123  0000DA  2A09               	goto	i2u35_44
  1124  0000DC  EF72  F000         i2u35_45:
  1125  0000E0                     	bcf	status,0
  1126  0000E0  90D8               	rlcf	(??_timer_zero+1+0),c
  1127  0000E2  360A               i2u35_44:
  1128  0000E4                     	decfsz	(??_timer_zero+0+0),c
  1129  0000E4  2E09               	goto	i2u35_45
  1130  0000E6  EF70  F000         	movf	(??_timer_zero+1+0),c,w
  1131  0000EA  500A               	movwf	((c:3979)),c	;volatile
  1132  0000EC  6E8B               	line	117
  1133                           	goto	i2l42
  1134  0000EE  EFBB  F000         	line	118
  1135                           	
  1136                           i2l41:
  1137  0000F2                     	line	119
  1138                           	
  1139                           i2l958:
  1140  0000F2                     	movlw	low(01h)
  1141  0000F2  0E01               	movwf	((c:3980)),c	;volatile
  1142  0000F4  6E8C               	line	120
  1143                           	movlw	low(0)
  1144  0000F6  0E00               	movwf	((c:3979)),c	;volatile
  1145  0000F8  6E8B               	movff	(c:3979),(c:3978)	;volatile
  1146  0000FA  CF8B FF8A          	movff	(c:3978),(c:3977)	;volatile
  1147  0000FE  CF8A FF89          	line	121
  1148                           	
  1149                           i2l960:
  1150  000102                     	movff	(c:_CURRENT),??_timer_zero+0+0
  1151  000102  C010  F009         	movlw	07h
  1152  000106  0E07               	andwf	(??_timer_zero+0+0),c
  1153  000108  1609               	movff	(c:3980),??_timer_zero+1+0	;volatile
  1154  00010A  CF8C F00A          	incf	(??_timer_zero+0+0),c
  1155  00010E  2A09               	goto	i2u36_44
  1156  000110  EF8C  F000         i2u36_45:
  1157  000114                     	bcf	status,0
  1158  000114  90D8               	rlcf	(??_timer_zero+1+0),c
  1159  000116  360A               i2u36_44:
  1160  000118                     	decfsz	(??_timer_zero+0+0),c
  1161  000118  2E09               	goto	i2u36_45
  1162  00011A  EF8A  F000         	movf	(??_timer_zero+1+0),c,w
  1163  00011E  500A               	movwf	((c:3980)),c	;volatile
  1164  000120  6E8C               	line	122
  1165                           	goto	i2l42
  1166  000122  EFBB  F000         	line	123
  1167                           	
  1168                           i2l962:
  1169  000126                     	goto	i2l42
  1170  000126  EFBB  F000         	
  1171                           i2l36:
  1172  00012A                     	
  1173                           i2l964:
  1174  00012A                     	movff	(c:_CURRENT),(c:___awdiv@dividend)
  1175  00012A  C010  F001         	movff	(c:_CURRENT+1),(c:___awdiv@dividend+1)
  1176  00012E  C011  F002         	movlw	high(08h)
  1177  000132  0E00               	movwf	((c:___awdiv@divisor+1)),c
  1178  000134  6E04               	movlw	low(08h)
  1179  000136  0E08               	movwf	((c:___awdiv@divisor)),c
  1180  000138  6E03               	call	___awdiv	;wreg free
  1181  00013A  ECBD  F000         	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  1182                           ; Switch size 1, requested type "space"
  1183                           ; Number of cases is 1, Range of values is 0 to 0
  1184                           ; switch strategies available:
  1185                           ; Name         Instructions Cycles
  1186                           ; simple_byte            4     3 (average)
  1187                           ;	Chosen strategy is simple_byte
  1188                           
  1189                           	movf 1+?___awdiv,c,w
  1190  00013E  5002               	xorlw	0^0	; case 0
  1191  000140  0A00               	skipnz
  1192  000142  B4D8               	goto	i2l976
  1193  000144  EFA6  F000         	goto	i2l42
  1194  000148  EFBB  F000         	
  1195                           i2l976:
  1196  00014C                     ; Switch size 1, requested type "space"
  1197                           ; Number of cases is 4, Range of values is 0 to 3
  1198                           ; switch strategies available:
  1199                           ; Name         Instructions Cycles
  1200                           ; simple_byte           13     7 (average)
  1201                           ;	Chosen strategy is simple_byte
  1202                           
  1203                           	movf 0+?___awdiv,c,w
  1204  00014C  5001               	xorlw	0^0	; case 0
  1205  00014E  0A00               	skipnz
  1206  000150  B4D8               	goto	i2l946
  1207  000152  EF2B  F000         	xorlw	1^0	; case 1
  1208  000156  0A01               	skipnz
  1209  000158  B4D8               	goto	i2l950
  1210  00015A  EF45  F000         	xorlw	2^1	; case 2
  1211  00015E  0A03               	skipnz
  1212  000160  B4D8               	goto	i2l954
  1213  000162  EF5F  F000         	xorlw	3^2	; case 3
  1214  000166  0A01               	skipnz
  1215  000168  B4D8               	goto	i2l958
  1216  00016A  EF79  F000         	goto	i2l42
  1217  00016E  EFBB  F000         
  1218                           	
  1219                           i2l38:
  1220  000172                     	goto	i2l42
  1221  000172  EFBB  F000         	line	124
  1222                           	
  1223                           i2l35:
  1224  000176                     	line	125
  1225                           	
  1226                           i2l42:
  1227  000176                     	bcf int$flags,1,c ;clear compiler interrupt flag (level 2)
  1228  000176  9212               	retfie f
  1229  000178  0011               	opt stack 0
  1230                           GLOBAL	__end_of_timer_zero
  1231                           	__end_of_timer_zero:
  1232  00017A                     	signat	_timer_zero,89
  1233                           	global	___awmod
  1234                           
  1235 ;; *************** function ___awmod *****************
  1236 ;; Defined at:
  1237 ;;		line 7 in file "/opt/microchip/xc8/v2.00/pic/sources/c99/common/awmod.c"
  1238 ;; Parameters:    Size  Location     Type
  1239 ;;  dividend        2    0[COMRAM] int 
  1240 ;;  divisor         2    2[COMRAM] int 
  1241 ;; Auto vars:     Size  Location     Type
  1242 ;;  sign            1    5[COMRAM] unsigned char 
  1243 ;;  counter         1    4[COMRAM] unsigned char 
  1244 ;; Return value:  Size  Location     Type
  1245 ;;                  2    0[COMRAM] int 
  1246 ;; Registers used:
  1247 ;;		wreg, status,2, status,0
  1248 ;; Tracked objects:
  1249 ;;		On entry : 0/0
  1250 ;;		On exit  : 0/0
  1251 ;;		Unchanged: 0/0
  1252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1253 ;;      Params:         4       0       0       0       0       0       0
  1254 ;;      Locals:         2       0       0       0       0       0       0
  1255 ;;      Temps:          0       0       0       0       0       0       0
  1256 ;;      Totals:         6       0       0       0       0       0       0
  1257 ;;Total ram usage:        6 bytes
  1258 ;; Hardware stack levels used:    1
  1259 ;; This function calls:
  1260 ;;		Nothing
  1261 ;; This function is called by:
  1262 ;;		_timer_zero
  1263 ;; This function uses a non-reentrant model
  1264 ;;
  1265                           psect	text4,class=CODE,space=0,reloc=2,group=1
  1266                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c99/common/awmod.c"
  1267                           	line	7
  1268                           global __ptext4
  1269                           __ptext4:
  1270  000266                     psect	text4
  1271                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c99/common/awmod.c"
  1272                           	line	7
  1273                           	global	__size_of___awmod
  1274                           	__size_of___awmod	equ	__end_of___awmod-___awmod
  1275  0000                     	
  1276                           ___awmod:
  1277  000266                     ;incstack = 0
  1278                           	opt	stack 28
  1279                           	line	12
  1280                           	
  1281                           i2l902:
  1282  000266                     	movlw	low(0)
  1283  000266  0E00               	movwf	((c:___awmod@sign)),c
  1284  000268  6E06               	line	13
  1285                           	
  1286                           i2l904:
  1287  00026A                     	btfsc	((c:___awmod@dividend+1)),c,7
  1288  00026A  BE02               	goto	i2u25_40
  1289  00026C  EF3C  F001         	goto	i2u25_41
  1290  000270  EF3A  F001         
  1291                           i2u25_41:
  1292  000274                     	goto	i2l910
  1293  000274  EF44  F001         i2u25_40:
  1294  000278                     	line	14
  1295                           	
  1296                           i2l906:
  1297  000278                     	negf	((c:___awmod@dividend)),c
  1298  000278  6C01               	comf	((c:___awmod@dividend+1)),c
  1299  00027A  1E02               	btfsc	status,0
  1300  00027C  B0D8               	incf	((c:___awmod@dividend+1)),c
  1301  00027E  2A02               	line	15
  1302                           	
  1303                           i2l908:
  1304  000280                     	movlw	low(01h)
  1305  000280  0E01               	movwf	((c:___awmod@sign)),c
  1306  000282  6E06               	goto	i2l910
  1307  000284  EF44  F001         	line	16
  1308                           	
  1309                           i2l287:
  1310  000288                     	line	17
  1311                           	
  1312                           i2l910:
  1313  000288                     	btfsc	((c:___awmod@divisor+1)),c,7
  1314  000288  BE04               	goto	i2u26_40
  1315  00028A  EF4B  F001         	goto	i2u26_41
  1316  00028E  EF49  F001         
  1317                           i2u26_41:
  1318  000292                     	goto	i2l914
  1319  000292  EF51  F001         i2u26_40:
  1320  000296                     	line	18
  1321                           	
  1322                           i2l912:
  1323  000296                     	negf	((c:___awmod@divisor)),c
  1324  000296  6C03               	comf	((c:___awmod@divisor+1)),c
  1325  000298  1E04               	btfsc	status,0
  1326  00029A  B0D8               	incf	((c:___awmod@divisor+1)),c
  1327  00029C  2A04               	goto	i2l914
  1328  00029E  EF51  F001         	
  1329                           i2l288:
  1330  0002A2                     	line	19
  1331                           	
  1332                           i2l914:
  1333  0002A2                     	movf	((c:___awmod@divisor)),c,w
  1334  0002A2  5003               iorwf	((c:___awmod@divisor+1)),c,w
  1335  0002A4  1004               	btfsc	status,2
  1336  0002A6  B4D8               	goto	i2u27_41
  1337  0002A8  EF58  F001         	goto	i2u27_40
  1338  0002AC  EF5A  F001         
  1339                           i2u27_41:
  1340  0002B0                     	goto	i2l930
  1341  0002B0  EF8A  F001         i2u27_40:
  1342  0002B4                     	line	20
  1343                           	
  1344                           i2l916:
  1345  0002B4                     	movlw	low(01h)
  1346  0002B4  0E01               	movwf	((c:___awmod@counter)),c
  1347  0002B6  6E05               	line	21
  1348                           	goto	i2l920
  1349  0002B8  EF64  F001         	
  1350                           i2l291:
  1351  0002BC                     	line	22
  1352                           	
  1353                           i2l918:
  1354  0002BC                     	bcf	status,0
  1355  0002BC  90D8               	rlcf	((c:___awmod@divisor)),c
  1356  0002BE  3603               	rlcf	((c:___awmod@divisor+1)),c
  1357  0002C0  3604               	line	23
  1358                           	incf	((c:___awmod@counter)),c
  1359  0002C2  2A05               	goto	i2l920
  1360  0002C4  EF64  F001         	line	24
  1361                           	
  1362                           i2l290:
  1363  0002C8                     	line	21
  1364                           	
  1365                           i2l920:
  1366  0002C8                     	
  1367                           	btfss	((c:___awmod@divisor+1)),c,(15)&7
  1368  0002C8  AE04               	goto	i2u28_41
  1369  0002CA  EF69  F001         	goto	i2u28_40
  1370  0002CE  EF6B  F001         i2u28_41:
  1371  0002D2                     	goto	i2l918
  1372  0002D2  EF5E  F001         i2u28_40:
  1373  0002D6                     	goto	i2l922
  1374  0002D6  EF6F  F001         	
  1375                           i2l292:
  1376  0002DA                     	goto	i2l922
  1377  0002DA  EF6F  F001         	line	25
  1378                           	
  1379                           i2l293:
  1380  0002DE                     	line	26
  1381                           	
  1382                           i2l922:
  1383  0002DE                     		movf	((c:___awmod@divisor)),c,w
  1384  0002DE  5003               	subwf	((c:___awmod@dividend)),c,w
  1385  0002E0  5C01               	movf	((c:___awmod@divisor+1)),c,w
  1386  0002E2  5004               	subwfb	((c:___awmod@dividend+1)),c,w
  1387  0002E4  5802               	btfss	status,0
  1388  0002E6  A0D8               	goto	i2u29_41
  1389  0002E8  EF78  F001         	goto	i2u29_40
  1390  0002EC  EF7A  F001         
  1391                           i2u29_41:
  1392  0002F0                     	goto	i2l926
  1393  0002F0  EF80  F001         i2u29_40:
  1394  0002F4                     	line	27
  1395                           	
  1396                           i2l924:
  1397  0002F4                     	movf	((c:___awmod@divisor)),c,w
  1398  0002F4  5003               	subwf	((c:___awmod@dividend)),c
  1399  0002F6  5E01               	movf	((c:___awmod@divisor+1)),c,w
  1400  0002F8  5004               	subwfb	((c:___awmod@dividend+1)),c
  1401  0002FA  5A02               
  1402                           	goto	i2l926
  1403  0002FC  EF80  F001         	
  1404                           i2l294:
  1405  000300                     	line	28
  1406                           	
  1407                           i2l926:
  1408  000300                     	bcf	status,0
  1409  000300  90D8               	rrcf	((c:___awmod@divisor+1)),c
  1410  000302  3204               	rrcf	((c:___awmod@divisor)),c
  1411  000304  3203               	line	29
  1412                           	
  1413                           i2l928:
  1414  000306                     	decfsz	((c:___awmod@counter)),c
  1415  000306  2E05               	
  1416                           	goto	i2l922
  1417  000308  EF6F  F001         	goto	i2l930
  1418  00030C  EF8A  F001         	
  1419                           i2l295:
  1420  000310                     	goto	i2l930
  1421  000310  EF8A  F001         	line	30
  1422                           	
  1423                           i2l289:
  1424  000314                     	line	31
  1425                           	
  1426                           i2l930:
  1427  000314                     	movf	((c:___awmod@sign)),c,w
  1428  000314  5006               	btfsc	status,2
  1429  000316  B4D8               	goto	i2u30_41
  1430  000318  EF90  F001         	goto	i2u30_40
  1431  00031C  EF92  F001         i2u30_41:
  1432  000320                     	goto	i2l934
  1433  000320  EF98  F001         i2u30_40:
  1434  000324                     	line	32
  1435                           	
  1436                           i2l932:
  1437  000324                     	negf	((c:___awmod@dividend)),c
  1438  000324  6C01               	comf	((c:___awmod@dividend+1)),c
  1439  000326  1E02               	btfsc	status,0
  1440  000328  B0D8               	incf	((c:___awmod@dividend+1)),c
  1441  00032A  2A02               	goto	i2l934
  1442  00032C  EF98  F001         	
  1443                           i2l296:
  1444  000330                     	line	33
  1445                           	
  1446                           i2l934:
  1447  000330                     	movff	(c:___awmod@dividend),(c:?___awmod)
  1448  000330  C001  F001         	movff	(c:___awmod@dividend+1),(c:?___awmod+1)
  1449  000334  C002  F002         	goto	i2l297
  1450  000338  EF9E  F001         	
  1451                           i2l936:
  1452  00033C                     	line	34
  1453                           	
  1454                           i2l297:
  1455  00033C                     	return	;funcret
  1456  00033C  0012               	opt stack 0
  1457                           GLOBAL	__end_of___awmod
  1458                           	__end_of___awmod:
  1459  00033E                     	signat	___awmod,8314
  1460                           	global	___awdiv
  1461                           
  1462 ;; *************** function ___awdiv *****************
  1463 ;; Defined at:
  1464 ;;		line 7 in file "/opt/microchip/xc8/v2.00/pic/sources/c99/common/awdiv.c"
  1465 ;; Parameters:    Size  Location     Type
  1466 ;;  dividend        2    0[COMRAM] int 
  1467 ;;  divisor         2    2[COMRAM] int 
  1468 ;; Auto vars:     Size  Location     Type
  1469 ;;  quotient        2    6[COMRAM] int 
  1470 ;;  sign            1    5[COMRAM] unsigned char 
  1471 ;;  counter         1    4[COMRAM] unsigned char 
  1472 ;; Return value:  Size  Location     Type
  1473 ;;                  2    0[COMRAM] int 
  1474 ;; Registers used:
  1475 ;;		wreg, status,2, status,0
  1476 ;; Tracked objects:
  1477 ;;		On entry : 0/0
  1478 ;;		On exit  : 0/0
  1479 ;;		Unchanged: 0/0
  1480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1481 ;;      Params:         4       0       0       0       0       0       0
  1482 ;;      Locals:         4       0       0       0       0       0       0
  1483 ;;      Temps:          0       0       0       0       0       0       0
  1484 ;;      Totals:         8       0       0       0       0       0       0
  1485 ;;Total ram usage:        8 bytes
  1486 ;; Hardware stack levels used:    1
  1487 ;; This function calls:
  1488 ;;		Nothing
  1489 ;; This function is called by:
  1490 ;;		_timer_zero
  1491 ;; This function uses a non-reentrant model
  1492 ;;
  1493                           psect	text5,class=CODE,space=0,reloc=2,group=1
  1494                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c99/common/awdiv.c"
  1495                           	line	7
  1496                           global __ptext5
  1497                           __ptext5:
  1498  00017A                     psect	text5
  1499                           	file	"/opt/microchip/xc8/v2.00/pic/sources/c99/common/awdiv.c"
  1500                           	line	7
  1501                           	global	__size_of___awdiv
  1502                           	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
  1503  0000                     	
  1504                           ___awdiv:
  1505  00017A                     ;incstack = 0
  1506                           	opt	stack 28
  1507                           	line	13
  1508                           	
  1509                           i2l858:
  1510  00017A                     	movlw	low(0)
  1511  00017A  0E00               	movwf	((c:___awdiv@sign)),c
  1512  00017C  6E06               	line	14
  1513                           	
  1514                           i2l860:
  1515  00017E                     	btfsc	((c:___awdiv@divisor+1)),c,7
  1516  00017E  BE04               	goto	i2u19_40
  1517  000180  EFC6  F000         	goto	i2u19_41
  1518  000184  EFC4  F000         
  1519                           i2u19_41:
  1520  000188                     	goto	i2l866
  1521  000188  EFCE  F000         i2u19_40:
  1522  00018C                     	line	15
  1523                           	
  1524                           i2l862:
  1525  00018C                     	negf	((c:___awdiv@divisor)),c
  1526  00018C  6C03               	comf	((c:___awdiv@divisor+1)),c
  1527  00018E  1E04               	btfsc	status,0
  1528  000190  B0D8               	incf	((c:___awdiv@divisor+1)),c
  1529  000192  2A04               	line	16
  1530                           	
  1531                           i2l864:
  1532  000194                     	movlw	low(01h)
  1533  000194  0E01               	movwf	((c:___awdiv@sign)),c
  1534  000196  6E06               	goto	i2l866
  1535  000198  EFCE  F000         	line	17
  1536                           	
  1537                           i2l274:
  1538  00019C                     	line	18
  1539                           	
  1540                           i2l866:
  1541  00019C                     	btfsc	((c:___awdiv@dividend+1)),c,7
  1542  00019C  BE02               	goto	i2u20_40
  1543  00019E  EFD5  F000         	goto	i2u20_41
  1544  0001A2  EFD3  F000         
  1545                           i2u20_41:
  1546  0001A6                     	goto	i2l872
  1547  0001A6  EFDD  F000         i2u20_40:
  1548  0001AA                     	line	19
  1549                           	
  1550                           i2l868:
  1551  0001AA                     	negf	((c:___awdiv@dividend)),c
  1552  0001AA  6C01               	comf	((c:___awdiv@dividend+1)),c
  1553  0001AC  1E02               	btfsc	status,0
  1554  0001AE  B0D8               	incf	((c:___awdiv@dividend+1)),c
  1555  0001B0  2A02               	line	20
  1556                           	
  1557                           i2l870:
  1558  0001B2                     	movlw	(01h)&0ffh
  1559  0001B2  0E01               	xorwf	((c:___awdiv@sign)),c
  1560  0001B4  1A06               	goto	i2l872
  1561  0001B6  EFDD  F000         	line	21
  1562                           	
  1563                           i2l275:
  1564  0001BA                     	line	22
  1565                           	
  1566                           i2l872:
  1567  0001BA                     	movlw	high(0)
  1568  0001BA  0E00               	movwf	((c:___awdiv@quotient+1)),c
  1569  0001BC  6E08               	movlw	low(0)
  1570  0001BE  0E00               	movwf	((c:___awdiv@quotient)),c
  1571  0001C0  6E07               	line	23
  1572                           	
  1573                           i2l874:
  1574  0001C2                     	movf	((c:___awdiv@divisor)),c,w
  1575  0001C2  5003               iorwf	((c:___awdiv@divisor+1)),c,w
  1576  0001C4  1004               	btfsc	status,2
  1577  0001C6  B4D8               	goto	i2u21_41
  1578  0001C8  EFE8  F000         	goto	i2u21_40
  1579  0001CC  EFEA  F000         
  1580                           i2u21_41:
  1581  0001D0                     	goto	i2l894
  1582  0001D0  EF1E  F001         i2u21_40:
  1583  0001D4                     	line	24
  1584                           	
  1585                           i2l876:
  1586  0001D4                     	movlw	low(01h)
  1587  0001D4  0E01               	movwf	((c:___awdiv@counter)),c
  1588  0001D6  6E05               	line	25
  1589                           	goto	i2l880
  1590  0001D8  EFF4  F000         	
  1591                           i2l278:
  1592  0001DC                     	line	26
  1593                           	
  1594                           i2l878:
  1595  0001DC                     	bcf	status,0
  1596  0001DC  90D8               	rlcf	((c:___awdiv@divisor)),c
  1597  0001DE  3603               	rlcf	((c:___awdiv@divisor+1)),c
  1598  0001E0  3604               	line	27
  1599                           	incf	((c:___awdiv@counter)),c
  1600  0001E2  2A05               	goto	i2l880
  1601  0001E4  EFF4  F000         	line	28
  1602                           	
  1603                           i2l277:
  1604  0001E8                     	line	25
  1605                           	
  1606                           i2l880:
  1607  0001E8                     	
  1608                           	btfss	((c:___awdiv@divisor+1)),c,(15)&7
  1609  0001E8  AE04               	goto	i2u22_41
  1610  0001EA  EFF9  F000         	goto	i2u22_40
  1611  0001EE  EFFB  F000         i2u22_41:
  1612  0001F2                     	goto	i2l878
  1613  0001F2  EFEE  F000         i2u22_40:
  1614  0001F6                     	goto	i2l882
  1615  0001F6  EFFF  F000         	
  1616                           i2l279:
  1617  0001FA                     	goto	i2l882
  1618  0001FA  EFFF  F000         	line	29
  1619                           	
  1620                           i2l280:
  1621  0001FE                     	line	30
  1622                           	
  1623                           i2l882:
  1624  0001FE                     	bcf	status,0
  1625  0001FE  90D8               	rlcf	((c:___awdiv@quotient)),c
  1626  000200  3607               	rlcf	((c:___awdiv@quotient+1)),c
  1627  000202  3608               	line	31
  1628                           	
  1629                           i2l884:
  1630  000204                     		movf	((c:___awdiv@divisor)),c,w
  1631  000204  5003               	subwf	((c:___awdiv@dividend)),c,w
  1632  000206  5C01               	movf	((c:___awdiv@divisor+1)),c,w
  1633  000208  5004               	subwfb	((c:___awdiv@dividend+1)),c,w
  1634  00020A  5802               	btfss	status,0
  1635  00020C  A0D8               	goto	i2u23_41
  1636  00020E  EF0B  F001         	goto	i2u23_40
  1637  000212  EF0D  F001         
  1638                           i2u23_41:
  1639  000216                     	goto	i2l890
  1640  000216  EF14  F001         i2u23_40:
  1641  00021A                     	line	32
  1642                           	
  1643                           i2l886:
  1644  00021A                     	movf	((c:___awdiv@divisor)),c,w
  1645  00021A  5003               	subwf	((c:___awdiv@dividend)),c
  1646  00021C  5E01               	movf	((c:___awdiv@divisor+1)),c,w
  1647  00021E  5004               	subwfb	((c:___awdiv@dividend+1)),c
  1648  000220  5A02               
  1649                           	line	33
  1650                           	
  1651                           i2l888:
  1652  000222                     	bsf	(0+(0/8)+(c:___awdiv@quotient)),c,(0)&7
  1653  000222  8007               	goto	i2l890
  1654  000224  EF14  F001         	line	34
  1655                           	
  1656                           i2l281:
  1657  000228                     	line	35
  1658                           	
  1659                           i2l890:
  1660  000228                     	bcf	status,0
  1661  000228  90D8               	rrcf	((c:___awdiv@divisor+1)),c
  1662  00022A  3204               	rrcf	((c:___awdiv@divisor)),c
  1663  00022C  3203               	line	36
  1664                           	
  1665                           i2l892:
  1666  00022E                     	decfsz	((c:___awdiv@counter)),c
  1667  00022E  2E05               	
  1668                           	goto	i2l882
  1669  000230  EFFF  F000         	goto	i2l894
  1670  000234  EF1E  F001         	
  1671                           i2l282:
  1672  000238                     	goto	i2l894
  1673  000238  EF1E  F001         	line	37
  1674                           	
  1675                           i2l276:
  1676  00023C                     	line	38
  1677                           	
  1678                           i2l894:
  1679  00023C                     	movf	((c:___awdiv@sign)),c,w
  1680  00023C  5006               	btfsc	status,2
  1681  00023E  B4D8               	goto	i2u24_41
  1682  000240  EF24  F001         	goto	i2u24_40
  1683  000244  EF26  F001         i2u24_41:
  1684  000248                     	goto	i2l898
  1685  000248  EF2C  F001         i2u24_40:
  1686  00024C                     	line	39
  1687                           	
  1688                           i2l896:
  1689  00024C                     	negf	((c:___awdiv@quotient)),c
  1690  00024C  6C07               	comf	((c:___awdiv@quotient+1)),c
  1691  00024E  1E08               	btfsc	status,0
  1692  000250  B0D8               	incf	((c:___awdiv@quotient+1)),c
  1693  000252  2A08               	goto	i2l898
  1694  000254  EF2C  F001         	
  1695                           i2l283:
  1696  000258                     	line	40
  1697                           	
  1698                           i2l898:
  1699  000258                     	movff	(c:___awdiv@quotient),(c:?___awdiv)
  1700  000258  C007  F001         	movff	(c:___awdiv@quotient+1),(c:?___awdiv+1)
  1701  00025C  C008  F002         	goto	i2l284
  1702  000260  EF32  F001         	
  1703                           i2l900:
  1704  000264                     	line	41
  1705                           	
  1706                           i2l284:
  1707  000264                     	return	;funcret
  1708  000264  0012               	opt stack 0
  1709                           GLOBAL	__end_of___awdiv
  1710                           	__end_of___awdiv:
  1711  000266                     	signat	___awdiv,8314
  1712                           	GLOBAL	__activetblptr
  1713                           __activetblptr	EQU	2
  1714  0000                     	psect	intsave_regs,class=BIGRAM,space=1,noexec
  1715                           	PSECT	rparam,class=COMRAM,space=1,noexec
  1716                           	GLOBAL	__Lrparam
  1717                           	FNCONF	rparam,??,?
  1718                           	GLOBAL	___rparam_used
  1719                           	___rparam_used EQU 1
  1720  0000                     	GLOBAL	___param_bank
  1721                           	___param_bank EQU 0
  1722  0000                     GLOBAL	__Lparam, __Hparam
  1723                           GLOBAL	__Lrparam, __Hrparam
  1724                           __Lparam	EQU	__Lrparam
  1725  0000                     __Hparam	EQU	__Hrparam
  1726  0000                            psect   temp,common,ovrld,class=COMRAM,space=1
  1727                           	global	btemp
  1728                           btemp:
  1729  000012                     	ds	1
  1730  000012                     	global	int$flags
  1731                           	int$flags	set btemp
  1732  0000                     	global	wtemp8
  1733                           	wtemp8 set btemp+1
  1734  0000                     	global	ttemp5
  1735                           	ttemp5 set btemp+1
  1736  0000                     	global	ttemp6
  1737                           	ttemp6 set btemp+4
  1738  0000                     	global	ttemp7
  1739                           	ttemp7 set btemp+8
  1740  0000                     	end


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     15      17
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _timer_zero in COMRAM

    _timer_zero->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _timer_zero in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _timer_zero in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _timer_zero in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _timer_zero in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _timer_zero in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _timer_zero in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     0      5       0
                                             10 COMRAM     5     0      5
                          _LEDConfig
                         _TMR0Config
 ---------------------------------------------------------------------------------
 (1) _TMR0Config                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDConfig                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _timer_zero                                           2     2      0     900
                                              8 COMRAM     2     2      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LEDConfig
   _TMR0Config

 _timer_zero (ROOT)
   ___awdiv
   ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E      F      11       1       13.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      11      15        0.0%
DATA                 0      0      11       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Fri Jan 11 17:34:08 2019

                     l30 0380                       l50 03A0                       l27 035E  
                     l47 039C                       l48 039C                       l49 03A0  
           ___awdiv@sign 0006              __CFG_BORV$3 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
                    l730 034E                      l732 0350                      l734 0352  
                    l726 033E                      l736 0354                      l728 0346  
                    l738 0360                      l970 0394             __CFG_CPB$OFF 000000  
           __CFG_CPD$OFF 000000             ___awmod@sign 0006             __CFG_IESO$ON 000000  
           __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000                     _LATA 000F89  
                   _LATB 000F8A                     _LATC 000F8B                     _LATD 000F8C  
                   i2l40 00BE                     i2l41 00F2                     i2l42 0176  
                   i2l35 0176                     i2l36 012A                     i2l37 0056  
                   i2l38 0172                     i2l39 008A                     _TMR0 000FD6  
           __CFG_WDTPS$1 000000                     _main 0394                     btemp 0012  
     __size_of_LEDConfig 0022                     start 000E            __CFG_MCLRE$ON 000000  
           ___param_bank 000000                    ?_main 000B          __end_of___awdiv 0266  
        __end_of___awmod 033E          ___awdiv@divisor 0003                    i2l280 01FE  
                  i2l281 0228                    i2l282 0238                    i2l274 019C  
                  i2l290 02C8                    i2l283 0258                    i2l275 01BA  
                  i2l291 02BC                    i2l284 0264                    i2l276 023C  
                  i2l292 02DA                    i2l277 01E8                    i2l293 02DE  
                  i2l278 01DC                    i2l294 0300                    i2l279 01FA  
                  i2l295 0310                    i2l287 0288                    i2l296 0330  
                  i2l288 02A2                    i2l297 033C                    i2l289 0314  
                  i2l900 0264                    i2l910 0288                    i2l902 0266  
                  i2l920 02C8                    i2l912 0296                    i2l904 026A  
                  i2l922 02DE                    i2l930 0314                    i2l914 02A2  
                  i2l906 0278                    i2l860 017E                    i2l932 0324  
                  i2l924 02F4                    i2l916 02B4                    i2l908 0280  
                  i2l940 0022                    i2l870 01B2                    i2l862 018C  
                  i2l934 0330                    i2l926 0300                    i2l918 02BC  
                  i2l950 008A                    i2l942 0030                    i2l880 01E8  
                  i2l872 01BA                    i2l864 0194                    i2l936 033C  
                  i2l928 0306                    i2l960 0102                    i2l952 009A  
                  i2l944 0032                    i2l890 0228                    i2l882 01FE  
                  i2l874 01C2                    i2l866 019C                    i2l858 017A  
                  i2l962 0126                    i2l954 00BE                    i2l946 0056  
                  i2l938 0014                    i2l892 022E                    i2l884 0204  
                  i2l876 01D4                    i2l868 01AA                    i2l956 00CE  
                  i2l948 0066                    i2l964 012A          ___awdiv@counter 0005  
                  i2l886 021A                    i2l878 01DC                    i2l894 023C  
                  i2l958 00F2                    i2l896 024C                    i2l888 0222  
                  i2l976 014C                    i2l898 0258                    _TRISA 000F92  
                  _TRISB 000F93                    _TRISC 000F94                    _TRISD 000F95  
            ?_TMR0Config 0001            __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000  
         __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000  
         __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000  
          __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000  
                  ttemp5 0013                    ttemp6 0016                    ttemp7 001A  
                  status 000FD8                    wtemp8 0013           __CFG_PBADEN$ON 000000  
        __initialization 0382             __end_of_main 03A4                   ??_main 0010  
          __activetblptr 000002        __end_of_LEDConfig 0382         ___awdiv@dividend 0001  
         __CFG_XINST$OFF 000000      __size_of_TMR0Config 0022                ??___awdiv 0005  
         __CFG_STVREN$ON 000000                ??___awmod 0005         ___awdiv@quotient 0007  
        ___awmod@divisor 0003          ___awmod@counter 0005                   tblptru 000FF8  
             __accesstop 0080  __end_of__initialization 0386            ___rparam_used 000001  
         __pcstackCOMRAM 0001                  _CURRENT 0010             ??_TMR0Config 000B  
                i2u20_40 01AA                  i2u20_41 01A6                  i2u21_40 01D4  
                i2u21_41 01D0                  i2u22_40 01F6                  i2u30_40 0324  
                i2u22_41 01F2                  i2u30_41 0320                  i2u23_40 021A  
                i2u31_40 0022                  i2u23_41 0216                  i2u31_41 001E  
                i2u24_40 024C                  i2u32_40 0030                  i2u24_41 0248  
                i2u32_41 002C                  i2u25_40 0278                  i2u25_41 0274  
                i2u33_44 007C                  i2u33_45 0078                  i2u26_40 0296  
                i2u26_41 0292                  i2u34_44 00B0                  i2u34_45 00AC  
                i2u19_40 018C                  i2u27_40 02B4                  i2u19_41 0188  
                i2u27_41 02B0                  i2u35_44 00E4                  i2u35_45 00E0  
                i2u28_40 02D6                  i2u28_41 02D2                  i2u36_44 0118  
                i2u36_45 0114                  i2u29_40 02F4                  i2u29_41 02F0  
                __Hparam 0000                  __Lparam 0000       __end_of_TMR0Config 0360  
                ___awdiv 017A                  ___awmod 0266                  __pcinit 0382  
                __ramtop 0600                  __ptext0 0394                  __ptext1 033E  
                __ptext2 0360                  __ptext4 0266                  __ptext5 017A  
              _T0CONbits 000FD5         ___awmod@dividend 0001                _LEDConfig 0360  
         __pintcode_body 0012     end_of_initialization 0386            __Lmediumconst 0000  
                int_func 0012               _timer_zero 0008               ?_LEDConfig 0001  
    start_initialization 0382         __CFG_OSC$INTIO67 000000         __CFG_LPT1OSC$OFF 000000  
            ?_timer_zero 0001              __pbssCOMRAM 0010              ??_LEDConfig 000B  
      __CFG_CCP2MX$PORTC 000000                __pintcode 0008                 ?___awdiv 0001  
               ?___awmod 0001      __size_of_timer_zero 0172                 __Hrparam 0000  
               __Lrparam 0000       __CFG_BOREN$SBORDIS 000000         __size_of___awdiv 00EC  
       __size_of___awmod 00D8            __size_of_main 0010                 int$flags 0012  
               main@argc 000B                 main@argv 000D             ??_timer_zero 0009  
             _INTCONbits 000FF2                 intlevel2 0000       __end_of_timer_zero 017A  
             _TMR0Config 033E  
